#autogenerated by sqlautocode

from sqlalchemy import *
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relation

engine = create_engine('sqlite:///database.sqlite3')
DeclarativeBase = declarative_base()
metadata = DeclarativeBase.metadata
metadata.bind = engine

class OmsDatabak(DeclarativeBase):
    __tablename__ = 'oms_databak'

    __table_args__ = {}

    #column definitions
    bak_name = Column(u'bak_name', Unicode(length=64), nullable=False)
    bak_path = Column(u'bak_path', Unicode(length=255), nullable=False)
    bak_pwd = Column(u'bak_pwd', Unicode(length=32), nullable=False)
    bak_user = Column(u'bak_user', Unicode(length=32), nullable=False)
    host_key = Column(u'host_key', Unicode(length=2048), nullable=False)
    host_name = Column(u'host_name', Unicode(length=64), primary_key=True, nullable=False)
    keep_days = Column(u'keep_days', INTEGER(), nullable=False)

    #relation definitions


class OmsHost(DeclarativeBase):
    __tablename__ = 'oms_host'

    __table_args__ = {}

    #column definitions
    group_name = Column(u'group_name', Unicode(length=32), nullable=False)
    host_addr = Column(u'host_addr', Unicode(length=128), nullable=False)
    host_key = Column(u'host_key', Unicode(length=2048), nullable=False)
    host_name = Column(u'host_name', Unicode(length=64), primary_key=True, nullable=False)
    host_user = Column(u'host_user', Unicode(length=32), nullable=False)

    #relation definitions


class OmsHostGroup(DeclarativeBase):
    __tablename__ = 'oms_host_group'

    __table_args__ = {}

    #column definitions
    group_desc = Column(u'group_desc', Unicode(length=512), nullable=False)
    group_key = Column(u'group_key', Unicode(length=2048), nullable=False)
    group_name = Column(u'group_name', Unicode(length=32), primary_key=True, nullable=False)

    #relation definitions


class OmsServiceState(DeclarativeBase):
    __tablename__ = 'oms_service_state'

    __table_args__ = {}

    #column definitions
    attempt = Column(u'attempt', INTEGER(), nullable=False)
    duration = Column(u'duration', Unicode(length=32), nullable=False)
    host_name = Column(u'host_name', Unicode(length=64), nullable=False)
    last_check = Column(u'last_check', Unicode(length=19), nullable=False)
    max_attempt = Column(u'max_attempt', INTEGER(), nullable=False)
    service = Column(u'service', Unicode(length=64), nullable=False)
    state_id = Column(u'state_id', Unicode(length=32), primary_key=True, nullable=False)
    status = Column(u'status', INTEGER(), nullable=False)

    #relation definitions


class OmsStatLoad(DeclarativeBase):
    __tablename__ = 'oms_stat_load'

    __table_args__ = {}

    #column definitions
    avg_1 = Column(u'avg_1', Unicode(length=8), nullable=False)
    avg_15 = Column(u'avg_15', Unicode(length=8), nullable=False)
    avg_5 = Column(u'avg_5', Unicode(length=8), nullable=False)
    check_time = Column(u'check_time', Unicode(length=19), primary_key=True, nullable=False)
    host_name = Column(u'host_name', Unicode(length=64), primary_key=True, nullable=False)

    #relation definitions


class OmsStatTraffic(DeclarativeBase):
    __tablename__ = 'oms_stat_traffic'

    __table_args__ = {}

    #column definitions
    check_time = Column(u'check_time', Unicode(length=19), primary_key=True, nullable=False)
    host_name = Column(u'host_name', Unicode(length=64), primary_key=True, nullable=False)
    traffic = Column(u'traffic', INTEGER(), nullable=False)

    #relation definitions


